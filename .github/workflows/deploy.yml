name: Build and Deploy Angular App

on:
  push:
    branches:
      - main  # Ejecuta solo cuando se hace push en la rama 'main'
    paths:
      - '**'  # Ejecuta para cualquier cambio en el repositorio

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Paso 1: Checar el repositorio
    - name: Checkout code
      uses: actions/checkout@v3

    # Paso 2: Configurar Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    # Paso 3: Instalar dependencias en el directorio del proyecto Angular (ya que está en /angular-app en tu repo)
    - name: Install dependencies
      working-directory: ./angular-app  # Cambié el directorio aquí
      run: |
        npm install
        # Instalar Angular CLI si no está disponible
        npm install -g @angular/cli

    # Paso 4: Construir el proyecto Angular
    - name: Build Angular App
      working-directory: ./angular-app  # Cambié el directorio aquí
      run: |
        npm run build --configuration=production --base-href '/tvShows/'

    # Paso 5: Copiar los archivos generados a la máquina remota en /var/html/angular-app/
    - name: Copy build to remote server
      env:
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_PASSWORD: ${{ secrets.REMOTE_PASSWORD }}
      run: |
        sudo apt-get update
        sudo apt-get install -y sshpass
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts
        echo "Added ${{ secrets.REMOTE_HOST }} to known_hosts."
        sshpass -p "${REMOTE_PASSWORD}" scp -r ./angular-app/dist/tv-shows/* ${REMOTE_USER}@${REMOTE_HOST}:/var/html/angular-app/

    # Paso 6: Reiniciar Apache
    - name: Restart Apache
      env:
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_PASSWORD: ${{ secrets.REMOTE_PASSWORD }}
      run: |
        sshpass -p "${REMOTE_PASSWORD}" ssh ${REMOTE_USER}@${REMOTE_HOST} "sudo systemctl restart apache2"

